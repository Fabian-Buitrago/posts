{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/posts/detail/comment/comment.component.css","webpack:///./src/app/posts/detail/comment/comment.component.html","webpack:///./src/app/posts/detail/comment/comment.component.ts","webpack:///./src/app/posts/detail/detail.component.css","webpack:///./src/app/posts/detail/detail.component.html","webpack:///./src/app/posts/detail/detail.component.ts","webpack:///./src/app/posts/list/list.component.css","webpack:///./src/app/posts/list/list.component.html","webpack:///./src/app/posts/list/list.component.ts","webpack:///./src/app/posts/posts.component.css","webpack:///./src/app/posts/posts.component.html","webpack:///./src/app/posts/posts.component.ts","webpack:///./src/app/posts/posts.module.ts","webpack:///./src/app/shared/services/api.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-posts></app-posts>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n","import { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { PostsModule } from './posts/posts.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    PostsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".card{\\r\\n    margin-top:5px;\\r\\n}\"","module.exports = \"<div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      <h6>{{comment.email}}</h6>\\n      <p>\\n          {{comment.body}}\\n      </p>\\n    </div>\\n</div>\"","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.css']\n})\nexport class CommentComponent implements OnInit {\n\t@Input() comment;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<ul class=\\\"list-group\\\" *ngIf=\\\"postDetail\\\">\\n  <li class=\\\"list-group-item active\\\">\\n      <h2 class=\\\"mb-1\\\">{{postDetail.title | uppercase}}</h2>\\n      <small>{{ random }} days ago</small>\\n  </li>\\n  <li class=\\\"list-group-item\\\">\\n    <img [src]=\\\"randomImage\\\" alt=\\\"\\\" width=\\\"100%\\\" height=\\\"300px\\\">\\n    \\n    <hr/>\\n    <p class=\\\"mb-1\\\">{{postDetail.body}}</p>\\n    <small>Posted by Fabian Buitrago</small>\\n\\n    <hr/>\\n    <h5>Commets:</h5>\\n    <ng-container *ngFor=\\\"let comment of comments\\\">\\n        <app-comment [comment]=\\\"comment\\\"></app-comment>\\n    </ng-container>\\n  </li>\\n</ul>\\n\"","import { ApiService } from '../../shared/services/api.service';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { Post } from '../../shared/interfaces/post.interface';\n\n@Component({\n\tselector: 'app-detail',\n\ttemplateUrl: './detail.component.html',\n\tstyleUrls: [ './detail.component.css' ],\n})\nexport class DetailComponent {\n\tcommentsUrl = 'https://jsonplaceholder.typicode.com/posts';\n\tpostDetail: Post;\n\tcomments: Comment[] = [];\n\n\t@Input('post')\n\tset post(post: Post) {\n\t    if(post){\n\t      this.postDetail = post;\n\t      this.getComments();\n\t    }\n\t}\n\n\tconstructor(private api: ApiService) {}\n\n\tgetComments() {\n\t    this.api.getData<Comment>(`${this.commentsUrl}/${this.postDetail.userId}/comments`)\n\t    .subscribe((data: Comment[]) => {\n\t\t\tif (data.length) {\n\t\t\t\tthis.comments = data;\n\t\t\t}\n\t\t});\n\t}\n\n\tget random(){\n\t\treturn Math.floor(Math.random() * 100) + 1;\n\t}\n\n\tget randomImage(){\n\t\treturn `https://picsum.photos/1000/300/?image=${this.random}`;\n\t}\n}\n","module.exports = \".card{\\r\\n    margin: 5px;\\r\\n}\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">{{ post.title }}</h5>\\n    <p class=\\\"card-text\\\">{{ post.body }}</p>\\n    <a href=\\\"#\\\" class=\\\"btn btn-primary\\\" (click)=\\\"showPost()\\\">More</a>\\n  </div>\\n</div>\\n\\n\\n\"","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output\n  } from '@angular/core';\nimport { Post } from '../../shared/interfaces/post.interface';\nimport { post } from 'selenium-webdriver/http';\n\n@Component({\n\tselector: 'app-list',\n\ttemplateUrl: './list.component.html',\n\tstyleUrls: [ './list.component.css' ],\n})\nexport class ListComponent implements OnInit {\n\t@Input() post;\n\t@Output() postDetail: EventEmitter<Post> = new EventEmitter();\n\n\tconstructor() {}\n\n\tngOnInit() {}\n\n\tshowPost() {\n\t\tthis.postDetail.next(this.post);\n\t}\n}\n","module.exports = \".grid-container {\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n  grid-column-gap: 10px;\\r\\n  -ms-grid-columns: 30% 70%;\\r\\n      grid-template-columns: 30% 70%;\\r\\n  height: 100%;\\r\\n  background:url('pattern.png');\\r\\n  background-repeat: repeat;\\r\\n}\\r\\n\\r\\n.list, .detail{\\r\\n  overflow-y: auto;\\r\\n}\\r\\n\\r\\n.list {\\r\\n  background:rgba(173, 216, 230, 0.5);\\r\\n  padding: 5px;\\r\\n}\\r\\n  \"","module.exports = \"<div class=\\\"grid-container\\\" *ngIf=\\\"posts.length\\\">\\n  <div class=\\\"list\\\">\\n    <ng-container *ngFor=\\\"let post of posts\\\">\\n      <app-list [post]=\\\"post\\\" (postDetail)=\\\"onShowPost($event)\\\"></app-list>\\n    </ng-container>\\n  </div>\\n  <div class=\\\"detail\\\">\\n    <app-detail [post]=\\\"postDetail\\\"></app-detail>\\n  </div>  \\n</div>\\n\\n\"","import { ApiService } from '../shared/services/api.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Post } from '../shared/interfaces/post.interface';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.css']\n})\nexport class PostsComponent implements OnInit {\n  postsUrl = 'https://jsonplaceholder.typicode.com/posts';\n  posts: Post[] = [];\n  postDetail: Post;\n\n  constructor(private api: ApiService) { }\n\n  ngOnInit() {\n    this.api.getData<Post>(this.postsUrl).subscribe((data: Post[]) => {\n      if(data.length){\n        this.posts = data;\n        this.postDetail = data[0];\n      }\n    });\n  }\n\n  onShowPost(post: Post){\n    this.postDetail = post;\n  }\n\n}\n","import { CommentComponent } from './detail/comment/comment.component';\nimport { CommonModule } from '@angular/common';\nimport { DetailComponent } from './detail/detail.component';\nimport { ListComponent } from './list/list.component';\nimport { NgModule } from '@angular/core';\nimport { PostsComponent } from './posts.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    PostsComponent,\n    ListComponent,\n    DetailComponent,\n    CommentComponent\n  ],\n  exports: [PostsComponent]\n})\nexport class PostsModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class ApiService {\n  constructor(private http: HttpClient) { }\n\n\tgetData<T>(url: string): Observable<T[]> {\n\t\treturn this.http.get<T[]>(url);\n\t}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}